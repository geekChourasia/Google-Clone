{"ast":null,"code":"import _objectDestructuringEmpty from\"/Users/abhishekchourasia/google-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";import _slicedToArray from\"/Users/abhishekchourasia/google-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./Search.css';import SearchIcon from'@material-ui/icons/Search';import MicIcon from'@material-ui/icons/Mic';import{Button}from'@material-ui/core';import{useHistory}from'react-router-dom';import{useStateValue}from'./StateProvider';import{actionTypes}from'./reducer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Search(_ref){var _ref$hideButton=_ref.hideButton,hideButton=_ref$hideButton===void 0?false:_ref$hideButton;//this is actually a props which i meant to false first\nvar _useStateValue=useStateValue(),_useStateValue2=_slicedToArray(_useStateValue,2);_objectDestructuringEmpty(_useStateValue2[0]);var dispatch=_useStateValue2[1];var _useState=useState(''),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var history=useHistory();//to using the history\nvar search=function search(e){e.preventDefault();dispatch({type:actionTypes.SET_SEARCH_TERM,term:input});history.push('/search');// console.log('you are searching >>>>' ,input);\n};return/*#__PURE__*/_jsxs(\"form\",{className:\"search\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search_input\",children:[/*#__PURE__*/_jsx(SearchIcon,{className:\"search_inputIcon\"}),/*#__PURE__*/_jsx(\"input\",{value:input,onChange:function onChange(e){return setInput(e.target.value);}}),/*#__PURE__*/_jsx(MicIcon,{})]}),!hideButton?/*#__PURE__*/_jsxs(\"div\",{className:\"search_buttons\",children:[/*#__PURE__*/_jsx(Button,{type:\"submit\",onClick:search,variant:\"outlined\",children:\"Google Search \"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",children:\"I'm Feeling Lucky \"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"search_buttons\",children:[/*#__PURE__*/_jsx(Button,{className:\"search_buttonsHidden\",type:\"submit\",onClick:search,variant:\"outlined\",children:\"Google Search \"}),/*#__PURE__*/_jsx(Button,{className:\"search_buttonsHidden\",variant:\"outlined\",children:\"I'm Feeling Lucky \"})]})]});}export default Search;","map":{"version":3,"sources":["/Users/abhishekchourasia/google-clone/src/pages/Search.js"],"names":["React","useState","SearchIcon","MicIcon","Button","useHistory","useStateValue","actionTypes","Search","hideButton","dispatch","input","setInput","history","search","e","preventDefault","type","SET_SEARCH_TERM","term","push","target","value"],"mappings":"8UAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAO,cAAP,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,OAAQC,MAAR,KAAqB,mBAArB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAAQC,aAAR,KAA4B,iBAA5B,CACA,OAAQC,WAAR,KAA0B,WAA1B,C,wFAGA,QAASC,CAAAA,MAAT,MAAoC,0BAAnBC,UAAmB,CAAnBA,UAAmB,0BAAR,KAAQ,iBAAE;AAClC,mBAAqBH,aAAa,EAAlC,mGAAWI,CAAAA,QAAX,oBACA,cAAsBT,QAAQ,CAAC,EAAD,CAA9B,wCAAMU,KAAN,eAAYC,QAAZ,eACA,GAAMC,CAAAA,OAAO,CAAER,UAAU,EAAzB,CAA6B;AAG7B,GAAMS,CAAAA,MAAM,CAAC,QAAPA,CAAAA,MAAO,CAACC,CAAD,CAAK,CACdA,CAAC,CAACC,cAAF,GAEAN,QAAQ,CAAC,CACLO,IAAI,CAACV,WAAW,CAACW,eADZ,CAELC,IAAI,CAACR,KAFA,CAAD,CAAR,CAMAE,OAAO,CAACO,IAAR,CAAa,SAAb,EAEA;AACH,CAZD,CAcA,mBACI,cAAM,SAAS,CAAC,QAAhB,wBACI,aAAK,SAAS,CAAC,cAAf,wBACI,KAAC,UAAD,EAAY,SAAS,CAAC,kBAAtB,EADJ,cAEI,cAAO,KAAK,CAAET,KAAd,CAAqB,QAAQ,CAAE,kBAACI,CAAD,QAAKH,CAAAA,QAAQ,CAACG,CAAC,CAACM,MAAF,CAASC,KAAV,CAAb,EAA/B,EAFJ,cAGI,KAAC,OAAD,IAHJ,GADJ,CAQK,CAACb,UAAD,cAAe,aAAK,SAAS,CAAC,gBAAf,wBAChB,KAAC,MAAD,EAAS,IAAI,CAAC,QAAd,CAAuB,OAAO,CAAEK,MAAhC,CAAyC,OAAO,CAAC,UAAjD,4BADgB,cAEhB,KAAC,MAAD,EAAQ,OAAO,CAAC,UAAhB,gCAFgB,GAAf,cAOA,aAAK,SAAS,CAAC,gBAAf,wBACD,KAAC,MAAD,EAAQ,SAAS,CAAC,sBAAlB,CAAyC,IAAI,CAAC,QAA9C,CAAuD,OAAO,CAAEA,MAAhE,CAAyE,OAAO,CAAC,UAAjF,4BADC,cAED,KAAC,MAAD,EAAQ,SAAS,CAAC,sBAAlB,CAAyC,OAAO,CAAC,UAAjD,gCAFC,GAfL,GADJ,CA4BH,CAED,cAAeN,CAAAA,MAAf","sourcesContent":["import React, {useState} from 'react';\nimport './Search.css';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MicIcon from '@material-ui/icons/Mic';\nimport {Button} from '@material-ui/core'\nimport { useHistory } from 'react-router-dom';\nimport {useStateValue} from './StateProvider';\nimport {actionTypes} from './reducer';\n\n\nfunction Search({hideButton=false}) { //this is actually a props which i meant to false first\n    const[{ }, dispatch]=useStateValue();\n    const[input,setInput]=useState('');\n    const history= useHistory(); //to using the history\n\n\n    const search=(e)=>{\n        e.preventDefault();\n\n        dispatch({\n            type:actionTypes.SET_SEARCH_TERM,\n            term:input\n        })\n\n\n        history.push('/search');\n\n        // console.log('you are searching >>>>' ,input);\n    }\n\n    return (\n        <form className=\"search\">\n            <div className='search_input'>\n                <SearchIcon className='search_inputIcon' />\n                <input value={input} onChange={(e)=>setInput(e.target.value)}/>\n                <MicIcon />\n            </div>\n\n\n            {!hideButton ? (<div className=\"search_buttons\">\n            <Button  type=\"submit\" onClick={search}  variant=\"outlined\">Google Search </Button>\n            <Button variant=\"outlined\">I'm Feeling Lucky </Button>\n            {/* variant=\"outlined\" maked outline */}\n\n            </div> ):(\n\n             <div className=\"search_buttons\">\n            <Button className=\"search_buttonsHidden\" type=\"submit\" onClick={search}  variant=\"outlined\">Google Search </Button>\n            <Button className=\"search_buttonsHidden\" variant=\"outlined\">I'm Feeling Lucky </Button>\n            {/* variant=\"outlined\" maked outline */}\n\n            </div>\n            )}\n            \n\n            {/* when it changes to a form using the submit button when ever we hit enter , it will render inputValue  */}\n         </form> \n    )\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}